version: '3.7'
services:
#  postgres_local:
#    image: "postgres:11.2-alpine"
#    container_name: postgres_local
#    environment:
#      POSTGRES_USER: ${DB_USERNAME}
#      POSTGRES_PASSWORD: ${DB_PASSWORD}
#      PGDATA: /data/postgres
#    volumes:
#      - ./services/postgres_local/:/docker-entrypoint-initdb.d
#    #       - postgres-data:/data/postgres
#    ports:
#      - 5433:5432
#    restart: unless-stopped

  postgres-worker:
    build:
      context: services/postgres_worker
    container_name: postgres-worker
    depends_on:
      - device-shadow
    env_file:
      - ./.env
    command: python -m app
    restart: unless-stopped

  celery-worker:
    build:
      context: services/celery_worker
    container_name: celery-worker
    env_file:
      - ./.env
    command: celery -A app.CeleryApp worker --loglevel=info

  device-shadow:
    build:
      context: services/device_shadow
    container_name: device-shadow
    expose:
      - 80
    ports:
      - 7777:80
    env_file:
      - ./.env
    command: /usr/local/bin/gunicorn app:app -w 1 -t 90 -b 0.0.0.0:80

  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto
    expose:
      - 1883
      - 9001
    ports:
      - 1883:1883
      - 9001:9001
    volumes:
      - ./configs/mosquitto.conf:/mosquitto/config/mosquitto.conf

  redis:
    image: redis:5.0.3-alpine
    container_name: redis_local
    volumes:
      - redis_local_data:/data
    ports:
      - 6380:6379
    restart: always
    command: redis-server --appendonly yes
    healthcheck:
        test: ["CMD", "redis-cli","ping"]
        interval: 30s
        timeout: 10s
        retries: 3

volumes:
  redis_local:
  # postgres-data:
  #mongo-data:
