version: '3.7'
services:
  web:
    build:
      context: ./services/web
    container_name: web
    depends_on:
      - postgres
      - redis
    environment:
      POSTGRES_CONN: "server=localhost;user=$POSTGRES_USER"
    env_file:
      - ./.env
    expose:
      - 5000
    volumes:
      - ./configs/web.py:/app/web/config.py
    command: /usr/local/bin/gunicorn --worker-clas eventlet app:app -w 1 -t 90 -b 0.0.0.0:5000
    healthcheck:
        test: ["CMD", "curl", "--fail", "http://localhost:5000/api/helthcheck/"]
        interval: 1m30s
        timeout: 10s
        retries: 3

  frontend:
    build:
      context: ./services/frontend
    container_name: frontend
    depends_on:
      - web
    expose:
      - 8008
    command: sh -c "yarn build && yarn start-prod"
    healthcheck:
        test: ["CMD", "curl", "--fail", "http://localhost:8008"]
        interval: 1m30s
        timeout: 10s
        retries: 3

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - 80:80
    volumes:
      - ./configs/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./services/frontend/app/404.html:/etc/nginx/404.html
      - ./services/frontend/app/404.html:/usr/share/nginx/html/404.html
    depends_on:
      - web
      - frontend

  redis:
    image: redis:5.0.3-alpine
    container_name: redis
    volumes:
      - redis_data:/data
    ports:
      - 6379:6379
    restart: always
    command: redis-server --appendonly yes
    healthcheck:
        test: ["CMD", "redis-cli","ping"]
        interval: 30s
        timeout: 10s
        retries: 3

  postgres:
    image: "postgres:11.2-alpine"
    container_name: postgres
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: /data/postgres
    volumes:
      - ./services/postgres/:/docker-entrypoint-initdb.d
#       - postgres-data:/data/postgres
    ports:
      - 5432:5432
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --username=${DB_USERNAME} --dbname=${DB_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-worker:
    build:
      context: services/postgres_worker
    container_name: postgres-worker
    depends_on:
      - device-shadow
    env_file:
      - ./.env
    command: python -m app
    restart: unless-stopped

  device-shadow:
    build:
      context: services/device_shadow
    container_name: device-shadow
    expose:
      - 80
    ports:
      - 7777:80
    env_file:
      - ./.env
    command: /usr/local/bin/gunicorn app:app -w 1 -t 90 -b 0.0.0.0:80

  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto
    expose:
      - 1883
      - 9001
    ports:
      - 1883:1883
      - 9001:9001
    volumes:
        - ./configs/mosquitto.conf:/mosquitto/config/mosquitto.conf
    
volumes:
  redis_data:
  postgres-data:
